name: BE - CI(Init repo -> CI Gradle Cache -> Test)

on:
  pull_request:
    branches: [citest]
    paths:
      [
        "src/**",
        "build.gradle",
      ]
    types: [opened, synchronize, reopened]

defaults:
  run:
    working-directory: ./

permissions:
  contents: read

jobs:
  be-test:
    name: Test SpringBoot
    runs-on: ubuntu-20.04

    steps:
      - name: setup repo
        uses: actions/checkout@v3

      - name: setup java 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "corretto"
          cache: gradle

      - name: Use gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test And Analyze
        run: ./gradlew test

      # 빌드 성공시 슬랙채널로 알람
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Pick up events even if the job fails or is canceled.ways() # Pick up events even if the job fails or is canceled.
